#!/usr/bin/env bash
# convert Rich Text format files to Markdown on macOS
# created by pdanford - Oct 2020
set -e

if [[ ${#} != 2 ]] && [[ ${#} != 3 ]]; then
    echo "Usage:"
    echo "convertRtfToMarkdown <src dir> <dst dir> [--codenotes]"
    echo "e.g. ./convertRtfToMarkdown . ."
    exit 1
elif [[ ${#} == 3 ]] && [[ ${3} != "--codenotes" ]]; then
    echo "Error: 3rd argument must be either --codenotes (to denote rtf sources are notes with code, or omitted."
    exit 1
fi

if [ ! -d "${1}" ]; then
    echo -e "Error: rtf source directory does not exist"
    exit 1
fi

if [ ! -d "${2}" ]; then
    mkdir "${2}"
fi

# function parameters:
# $1 is the source rtf file name (with path) to convert
# $2 is the destination folder for converted md files
# $3 if not "", do plain md -> code notes md sed manipulation also
function convert-rtf-to-md() {
    SRCFILENAME="${1##*/}"
    DEST_FILE="${2}/${SRCFILENAME/.rtf/.md}"
    cat "${1}" \
        | /usr/bin/textutil -convert html -stdin -stdout  -prefixspaces 4 \
                            -strip -excludedelements "(p,a)"              \
        | { pandoc -f html -t markdown_strict --wrap=none ; echo -en "\n" ; } \
        | /usr/bin/sed -E                                                     \
                       -e  's/(<span)([^>]*>)([^<]*)(<\/span>)/\3/g'          \
                       -e  's/&lt;/</g'                                       \
                       -e  's/&gt;/>/g'                                       \
                       -e  's/(^[0-9]+)\)/\1./g'                              \
                       -e  's/Â / /g'                                          \
                       > "${DEST_FILE}"
                       # 1. See README.md for explanation of regex.
                       # 2. Note the shell grouping construct {} around pandoc
                       #    is to append a \n to the stream to make sure it's 
                       #    properly terminated for the seds that follow.

    # do additional sed manipulation of plain md -> code notes md sed
    # manipulation also if 3rd arg exists
    if [[ ${3:+x} ]]; then
        # this separated because it must be done before because the D will keep
        # the other regex substitutions from running
        /usr/bin/sed -E -i ""                                                                    \
                     -e 'N;s/(^[[:space:]]*[^* ].*)(\n)([[:space:]]*\*\*)/\1\2\2\3/;t' -e 'P;D;' \
                     "${DEST_FILE}"
 
        /usr/bin/sed -E -i ""                                               \
                     -e 's/(^[[:space:]]*)(\*\*)(.*)(\*\*)(.*)/    \1\3\5/' \
                     -e 's/(\*\*)([^*]+)(\*\*)/`\2`/g'                      \
                     -e 's/(\*\*)([^*`])(.*)(\*\*)/`\2\3`/g'                \
                     -e 's/(\\)([]\`*_#[])/\2/g'                            \
                     -e 's/`([[:space:]]+)`/\1/g'                           \
                     "${DEST_FILE}"
                     # see README.md for explanation of regex
    fi
}

# make available to bash -c used in find below
export -f convert-rtf-to-md

/usr/bin/find "${1}" \
               -maxdepth 1    \
               -iname "*.rtf" \
               -exec bash -c "convert-rtf-to-md \"{}\" \"${2}\" \"${3}\"" ';'
